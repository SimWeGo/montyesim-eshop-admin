stages:
  - verify_tag
  - build
  - security_scan
  - publish
  - deploy
  - create_tag

variables:
  VERSION_FORMATTED: $VERSION_INCREMENTED$VERSION_SUFFIX
  CACHE_DIR: "$CI_PROJECT_DIR/cache"
  FF_USE_FASTZIP: "true"
  ARTIFACT_COMPRESSION_LEVEL: "fast"
  CACHE_COMPRESSION_LEVEL: "fast"
include:

  - project: 'monty-mobile1/devops/templates/ci-cd/jobs/builders'
    ref: v2.0.1
    file: /nodejs-dynamic.yml

  # SONARQUBE SECURITY SCANNER
  - project: 'monty-mobile1/devops/templates/ci-cd/jobs/scanners'
    ref: v0.1
    file: /sonarqube-nodejs-scanner.yml

  # PUBLISH TO REGISTRY
  - project: 'monty-mobile1/devops/templates/ci-cd/jobs/publishers'
    ref: v0.1
    file: '/nodejs_nginx_pack_publish.yml'

  # DEPLOY TO CLUSTER
  - project: 'monty-mobile1/devops/templates/ci-cd/jobs/deployers'
    ref: v2.0.0
    file: '/kustomize-cd.yml'

verify_tag:
  stage: verify_tag
  rules:
    - if: $CI_COMMIT_TAG
  script:
    - |
      echo "Checking if the tag is created from a hotfix branch..."
      git fetch --all
      TAG_COMMIT=$(git rev-list -n 1 $CI_COMMIT_REF_NAME)
      BRANCHES=$(git branch -r | grep '^\s*origin/hotfix/\|^\s*origin/main')
      MATCH_FOUND=false
      for BRANCH in $BRANCHES; do
        echo "Checking branch $BRANCH..."
        if git merge-base --is-ancestor $TAG_COMMIT $BRANCH; then
          echo "The tag $CI_COMMIT_REF_NAME is created from the branch $BRANCH."
          MATCH_FOUND=true
          break
        fi
      done
      if [[ "$BRANCH" =~ "origin/hotfix/" ]]; then

        BRANCH=$(echo $BRANCH | cut -d "/" -f2,3)

        curl --location -X POST -H "PRIVATE-TOKEN: $BOT_ACCESS_TOKEN" \
            -H "Content-Type: application/x-www-form-urlencoded" \
            "https://gitlab.com/api/v4/projects/${CI_PROJECT_ID}/merge_requests" \
            --data-urlencode "title=Hotfix Merge request from $BRANCH" \
            --data-urlencode "source_branch=$BRANCH" \
            --data-urlencode "target_branch=main" \
            --data-urlencode "target_project_id=$CI_PROJECT_ID" \
            --data-urlencode "description=Merge the Hotfix from $BRANCH to main" \
            --data-urlencode "remove_source_branch=true" \
            --data-urlencode "squash=true"
      fi
      if [ "$MATCH_FOUND" = false ]; then
        echo "The tag $CI_COMMIT_REF_NAME is NOT created from any hotfix branch."
        exit 1
      fi

build:
  extends: .build_environment
  cache:
    key:
      files:
        - package-lock.json
    paths:
      - node_modules
    policy: pull-push
  rules:
    - if: $CI_MERGE_REQUEST_ID
    - if: $CI_COMMIT_BRANCH =~ '/^hotfix/.*$/'
    - if: $CI_COMMIT_BRANCH == $MAIN_BRANCH
    - if: $CI_COMMIT_TAG
  interruptible: true

generate-lcov:
  extends: .generate-lcov
  allow_failure: true
  rules:
    - if: $CI_MERGE_REQUEST_ID
    - if: $CI_COMMIT_BRANCH =~ '/^hotfix/.*$/'
    - if: $CI_COMMIT_BRANCH == $MAIN_BRANCH
    - if: $CI_COMMIT_TAG
  interruptible: true


sonarqube-check:
  extends: .sonarqube-check
  rules:
    - if: $CI_MERGE_REQUEST_ID && $CUSTOM_KEY_SQF_ALLOW == "true"
      allow_failure: true
    - if: $CI_MERGE_REQUEST_ID && $CUSTOM_KEY_SQF_ALLOW != "true"
      allow_failure: false
    - if: $CI_COMMIT_BRANCH == $REPO_MAIN_BRANCH && $CUSTOM_KEY_SQF_ALLOW == "true"
      allow_failure: true
    - if: $CI_COMMIT_BRANCH == $REPO_MAIN_BRANCH && $CUSTOM_KEY_SQF_ALLOW != "true"
      allow_failure: false
    - if: $CI_COMMIT_BRANCH =~ '/^hotfix/.*$/' && $CUSTOM_KEY_SQF_ALLOW == "true"
      allow_failure: true
    - if: $CI_COMMIT_BRANCH =~ '/^hotfix/.*$/' && $CUSTOM_KEY_SQF_ALLOW != "true"
      allow_failure: false
    - if: $CI_COMMIT_TAG && $CUSTOM_KEY_SQF_ALLOW == "true"
      allow_failure: true
    - if: $CI_COMMIT_TAG && $CUSTOM_KEY_SQF_ALLOW != "true"
      allow_failure: false
  interruptible: true
  dependencies:
    - generate-lcov
  needs:
    - generate-lcov

pack_publish_dev:
  extends: .pack_publish
  variables:
    VERSION_FORMATTED: $VERSION-$PROJECT_TAG
  rules:
    - if: $CI_COMMIT_BRANCH == $MAIN_BRANCH
  dependencies:
    - build
  needs:
    - job: sonarqube-check
    - job: build
  interruptible: true

pack_publish:
  extends: .pack_publish
  variables:
    VERSION_FORMATTED: $PROJECT_TAG-$CI_COMMIT_TAG
  rules:
    - if: $CI_COMMIT_TAG
  dependencies:
    - build
  needs:
    - job: sonarqube-check
    - job: build
  interruptible: true

deploy:
  extends: .kustomize-cd
  variables:
    ENVIRONMENT_FILE: .env.$ENVIRONMENT
    FOLDER_NAME: $DIRECTORY_STRUCTURE_NAME
  before_script:
    - |
      if [ -n "$CI_COMMIT_TAG" ]; then
        if [ -n "$PROJECT_TAG" ]; then
          export VERSION_FORMATTED=$PROJECT_TAG-$CI_COMMIT_TAG;
        else
          export VERSION_FORMATTED=$CI_COMMIT_TAG;
        fi
      fi
  rules:
    - if: $CI_COMMIT_BRANCH == $MAIN_BRANCH
    - if: $CI_COMMIT_TAG

